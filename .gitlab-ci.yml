stages:
  - build
  - test
  - quality
  - package
  - deploy staging

build:
  stage: build
  image: openjdk:12-alpine
  script:
    - ./gradlew build
  artifacts:
    paths:
      - ./build/libs/

smokeÂ test:
  stage: test
  image: openjdk:12-alpine
  before_script:
    - apk --no-cache add curl
  script:
    - java -jar ./build/libs/cars-api.jar &
    - sleep 30
    - curl http://localhost:5000/actuator/health | grep "UP"

.unit test:
  stage: test
  image: openjdk:12-alpine
  script:
    - ./gradlew test
  artifacts:
    when: always
    paths:
      - build/reports/tests
    reports:
      junit: build/test-results/tests/*.xml
  
PMDTest:
  stage: quality
  image: openjdk:12-alpine
  script:
    - ./gradlew pmdMain pmdTest
  artifacts:
    when: always
    paths:
      - build/reports/pmd

release:
  stage: package
  image: docker:dind
  services:
  - docker:dind
  script:
  - docker build -t $CI_REGISTRY_IMAGE .
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker push $CI_REGISTRY_IMAGE

staging:
  stage: deploy staging
  image: docker:dind
  services:
  - docker:dind
  variables:
    PLAYWD: ip172-18-0-82-c6f4c5fnjsv000bg319g
  script:
  - apk add --no-cache --quiet py-pip
  - pip install --quiet docker-compose~=1.23.0
  - export DOCKER_HOST=tcp://$PLAYWD.direct.labs.play-with-docker.com:2375
  - docker-compose down
  - docker-compose up -d
  environment:
    name: staging
    url: http://$PLAYWD-5000.direct.labs.play-with-docker.com 